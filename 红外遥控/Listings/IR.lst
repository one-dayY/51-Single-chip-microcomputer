C51 COMPILER V9.54   IR                                                                    07/06/2024 13:43:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst) 
                    -OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Data[4];
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;
  12          unsigned char IR_RepeatFlag;
  13          unsigned char IR_Address;
  14          unsigned char IR_Command;
  15          
  16          void IR_Init()
  17          {
  18   1              Timer0_Init();
  19   1              Int0_Init();
  20   1      }
  21          
  22          unsigned char IR_GetDataFlag(void)
  23          {
  24   1              if(IR_DataFlag)
  25   1              {
  26   2                      IR_DataFlag = 0;
  27   2                      return 1;
  28   2              }
  29   1              return 0;
  30   1      }
  31          
  32          unsigned char IR_GetRepeatFlag(void)
  33          {
  34   1              if(IR_RepeatFlag)
  35   1              {
  36   2                      IR_RepeatFlag = 0;
  37   2                      return 1;
  38   2              }
  39   1              return 0;
  40   1      }
  41          
  42          unsigned char IR_GetAddress(void)
  43          {
  44   1              return IR_Address;
  45   1      }
  46          
  47          unsigned char IR_GetCommand(void)
  48          {
  49   1              return IR_Command;
  50   1      }
  51          
  52          void Init0_Routine(void) interrupt 0
  53          {
  54   1              if(IR_State == 0)
C51 COMPILER V9.54   IR                                                                    07/06/2024 13:43:50 PAGE 2   

  55   1              {
  56   2                      
  57   2                      Timer0_SetCounter(0);   //计数器清零
  58   2                      Timer0_Run(1);                  //开始计时
  59   2                      IR_State = 1;
  60   2              }
  61   1              else if(IR_State == 1)
  62   1              {
  63   2                      IR_Time = Timer0_GetCounter();  //取出时间
  64   2                      Timer0_SetCounter(0);   //立马清零，方便下一次计时
  65   2                      
  66   2                      if(IR_Time >= 13500-1500 && IR_Time <= 13500+1500)              //Strat
  67   2                      {
  68   3                              IR_State = 2;
  69   3                      }
  70   2                      else if(IR_Time >= 11250-1500 && IR_Time <= 11250+1500) //Repeat
  71   2                      {
  72   3                              IR_RepeatFlag = 1;
  73   3                              Timer0_Run(0);                  //停止计时
  74   3                              IR_State = 0;
  75   3                      }
  76   2                      else
  77   2                      {
  78   3                              IR_State = 1;
  79   3                      }
  80   2              }
  81   1              else if(IR_State == 2)
  82   1              {
  83   2                      IR_Time = Timer0_GetCounter();  //取出时间
  84   2                      Timer0_SetCounter(0);   //立马清零，方便下一次计时
  85   2                      
  86   2                      if(IR_Time >= 1120-500 && IR_Time <= 1120+500)
  87   2                      {
  88   3                              //IR_Data[0] &= ~(0x01 << IR_pData)
  89   3                              IR_Data[IR_pData/8] &= ~(0x01<<(IR_pData%8));   //在IR_Data数组中清除一个特定位的值
  90   3                              //&与 相应位置为0不影响其他位
  91   3                              //|或 相应位置为1不影响其他位
  92   3                              
  93   3                              //0x01<<(IR_pData%8)创建一个只有指定位为1，其他位为0的掩码
  94   3                              //IR_pData%8计算出这个位在字节中的偏移量
  95   3                              //IR_pData/8计算出这个位在字节数组中的索引
  96   3                              //IR_Data数组中的某一位设置为0，即清楚该位的值。
  97   3                              //IR_pData表示当前操作的位在数组IR_Data中的位置，即数组的索引。0-31变化
  98   3                              
  99   3                              IR_pData++;
 100   3                      }
 101   2                      else if(IR_Time >= 2250-500 && IR_Time <= 2250+500)
 102   2                      {
 103   3                              IR_Data[IR_pData/8] |= (0x01<<(IR_pData%8));
 104   3                              IR_pData++;
 105   3                              /*
 106   3                              |= 两个二进制对应位都为0时，结果为0，否则结果等于1
 107   3                              &= 两个二进制对应位都为1时，结果为1，否则结果等于0
 108   3                              */
 109   3                      }
 110   2                      else
 111   2                      {
 112   3                              IR_pData = 0;
 113   3                              IR_State = 1;
 114   3                      }
 115   2                      
 116   2                      if(IR_pData >= 32)
C51 COMPILER V9.54   IR                                                                    07/06/2024 13:43:50 PAGE 3   

 117   2                      {
 118   3                              IR_pData = 0;
 119   3                              if((IR_Data[0] == ~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3]))  //地址码和命令码相反
 120   3                              {
 121   4                                      IR_Address = IR_Data[0];
 122   4                                      IR_Command = IR_Data[2];
 123   4                                      IR_DataFlag = 1;
 124   4                              }
 125   3                              Timer0_Run(0);
 126   3                              IR_State = 0;
 127   3                      }
 128   2              }
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
